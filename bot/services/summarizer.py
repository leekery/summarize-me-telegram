from typing import List, Dict
from openai import OpenAI
from config import settings

DEEPSEEK_API_KEY = settings.deepseek_api_key
DEEPSEEK_BASE_URL = "https://api.deepseek.com"

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–≤–æ–¥–∫–∏ "
    "–Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤ —á–∞—Ç–µ. –ù–µ —É–ø–æ–º–∏–Ω–∞–π —Å–∞–º—É –∑–∞–¥–∞—á—É —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–∫–∏, "
    "–ø—Ä–æ—Å—Ç–æ –≤—ã–¥–∞–π –∏—Ç–æ–≥ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = OpenAI(api_key=DEEPSEEK_API_KEY, base_url=DEEPSEEK_BASE_URL)

async def summarize_messages(msgs: List[Dict]) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —Å –ø–æ–º–æ—â—å—é DeepSeek API (OpenAI SDK).
    –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –∫–ª—é—á –ø—É—Å—Ç–æ–π ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É.
    """
    if not DEEPSEEK_API_KEY:
        return _fallback_summary(msgs)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    content = "\n".join(
        f"[{m['timestamp']}] {m['user_name']}: {m['text']}" for m in msgs
    )

    try:
        # –í—ã–∑–æ–≤ DeepSeek
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": content},
            ],
            stream=False
        )
        content = response.choices[0].message.content
        return content.strip() if content is not None else ""

    except Exception as e:
        return f"(–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)\n{_fallback_summary(msgs)}\n\n{e}"

def _fallback_summary(msgs: List[Dict]) -> str:
    """–ü—Ä–æ—Å—Ç–µ–π—à–∞—è –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π."""
    lines = [f"{m['user_name']}: {m['text']}" for m in msgs]
    summary = "\n".join(lines[-10:])
    return "üìù (–∑–∞–≥–ª—É—à–∫–∞):\n" + summary